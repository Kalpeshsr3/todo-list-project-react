{"ast":null,"code":"var _jsxFileName = \"D:\\\\new start\\\\todo list project react\\\\my-app\\\\src\\\\Components\\\\PracticeTodo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PracticeTodo() {\n  _s();\n  const [data, setData] = useState(\"\");\n  const [myinput, setmyinput] = useState([]);\n  const [togglebtn, setToggleBtn] = useState(true);\n  const [isEditItem, setIsEditItem] = useState(null);\n  const myfunc = () => {\n    if (!data) {\n      alert('please write your todo');\n    } else if (data && !togglebtn) {\n      setmyinput(myinput.map(val => {\n        if (val.id === isEditItem) {\n          return {\n            ...val,\n            name: data\n          };\n        } else {\n          return val;\n        }\n      }));\n      setData('');\n    } else {\n      setmyinput([{\n        id: `${data}-${Date.now()}`,\n        name: `${data}`\n      }, ...myinput]);\n      setData(\" \");\n    }\n  };\n  const myedit = i => {\n    console.log(i);\n    const editData = myinput.find(val => {\n      return val.id === i; //find()mtd give us jis particular edit btn pe click kiya hai uske id ko\n      //array ke stored data se matched id ki information dega\n    });\n    // console.log(editData);\n    setToggleBtn(false);\n    setData(editData.name);\n    setIsEditItem(i);\n  };\n  const mydelete = i => {\n    // console.log(i);\n    const delval = myinput.filter(val => {\n      // console.log(val.id);\n      return val.id !== i; //means jis particular id pe click kiya hai usko hum list ke id's ke sath match karke\n      //dekhenge & phir jo \"match nahi honge\" hamare particular id ke sath unko return karenge & unn unmatched id\n      //ko hum apne array mai send karenge so jab state update hoga toh jo unmatched hai vo show honge \n      // console.log(val.id == i);\n    });\n    // console.log(delval);\n    setmyinput(delval); //delval variable mai jo unmatched data hai vo hai & usko hum setmyinput()func mai bhej\n    //rahe hai so vo myinpput state mai jayenge & state update hoke apne ko show honge\n  };\n\n  const removeAll = () => {\n    setmyinput([]);\n  };\n  console.log(myinput);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"enter name\",\n      value: data,\n      onChange: e => setData(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), togglebtn ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: myfunc,\n      children: \"click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: myfunc,\n      children: \"edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 62\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: myinput.map((val, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"todo-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => myedit(val.id),\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => mydelete(val.id),\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, val.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), myinput != '' ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => removeAll(),\n      children: \"Remove All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 24\n    }, this) : '']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(PracticeTodo, \"voNrvD7gl35BT4I6MXmeS9UIXbs=\");\n_c = PracticeTodo;\nexport default PracticeTodo;\nvar _c;\n$RefreshReg$(_c, \"PracticeTodo\");","map":{"version":3,"names":["React","useState","PracticeTodo","data","setData","myinput","setmyinput","togglebtn","setToggleBtn","isEditItem","setIsEditItem","myfunc","alert","map","val","id","name","Date","now","myedit","i","console","log","editData","find","mydelete","delval","filter","removeAll","e","target","value"],"sources":["D:/new start/todo list project react/my-app/src/Components/PracticeTodo.js"],"sourcesContent":["import React,{useState} from 'react';\r\n\r\nfunction PracticeTodo(){\r\n   const [data,setData] = useState(\"\");\r\n   const [myinput,setmyinput] = useState([]);\r\n   const [togglebtn,setToggleBtn] = useState(true);\r\n   const [isEditItem,setIsEditItem] = useState(null);\r\n\r\n   const myfunc = () => {\r\n      if(!data){\r\n        alert('please write your todo')\r\n      }\r\n      else if(data && !togglebtn){\r\n        setmyinput(\r\n          myinput.map((val)=>{\r\n            if(val.id === isEditItem){\r\n              return {...val,name:data}\r\n            }\r\n            else{\r\n              return val;\r\n            }\r\n          })\r\n        )\r\n        setData('')\r\n      }\r\n      else{\r\n        setmyinput([{id:`${data}-${Date.now()}`,name:`${data}`},...myinput])\r\n        setData(\" \")\r\n      }\r\n      \r\n      \r\n   }\r\n\r\n   const myedit = (i) => {\r\n    console.log(i);\r\n    const editData = myinput.find((val)=>{\r\n      return val.id === i;//find()mtd give us jis particular edit btn pe click kiya hai uske id ko\r\n      //array ke stored data se matched id ki information dega\r\n    })\r\n    // console.log(editData);\r\n    setToggleBtn(false);\r\n    setData(editData.name);\r\n    setIsEditItem(i);\r\n\r\n   }\r\n\r\n   const mydelete = (i) => {\r\n    // console.log(i);\r\n    const delval = myinput.filter((val)=> {\r\n      // console.log(val.id);\r\n      return val.id !== i//means jis particular id pe click kiya hai usko hum list ke id's ke sath match karke\r\n      //dekhenge & phir jo \"match nahi honge\" hamare particular id ke sath unko return karenge & unn unmatched id\r\n      //ko hum apne array mai send karenge so jab state update hoga toh jo unmatched hai vo show honge \r\n      // console.log(val.id == i);\r\n\r\n      \r\n    })\r\n// console.log(delval);\r\n     setmyinput(delval)//delval variable mai jo unmatched data hai vo hai & usko hum setmyinput()func mai bhej\r\n     //rahe hai so vo myinpput state mai jayenge & state update hoke apne ko show honge\r\n}\r\n\r\n   const removeAll = () => {\r\n    setmyinput([])\r\n   }\r\n   console.log(myinput);\r\n  return(\r\n    <div>\r\n      {/* {console.log('return running-> state updating jab bhi hum input mai changes karenge')} */}\r\n      <input type='text' placeholder='enter name' value={data} onChange={(e)=>setData(e.target.value)}/>\r\n      {togglebtn ? <button onClick={myfunc}>click</button> : <button onClick={myfunc}>edit</button>}\r\n      \r\n      <ul>\r\n      {\r\n        myinput.map((val,i)=>{\r\n          \r\n          return(\r\n            <div className='todo-btn'  key={val.id}>\r\n            <li>{val.name}</li>\r\n            <button  onClick={()=>myedit(val.id)}>edit</button>\r\n            <button onClick={()=>mydelete(val.id)}>delete</button>\r\n\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n      </ul>\r\n      {myinput != '' ? <button onClick={()=>removeAll()}>Remove All</button>:''}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PracticeTodo"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}